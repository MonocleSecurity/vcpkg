diff --git a/backends/imgui_impl_opengl3.cpp b/backends/imgui_impl_opengl3.cpp
index bbe96c42..5f52a796 100644
--- a/backends/imgui_impl_opengl3.cpp
+++ b/backends/imgui_impl_opengl3.cpp
@@ -287,7 +287,6 @@ bool    ImGui_ImplOpenGL3_Init(const char* glsl_version)
         return false;
     }
 #endif
-
     // Setup backend capabilities flags
     ImGui_ImplOpenGL3_Data* bd = IM_NEW(ImGui_ImplOpenGL3_Data)();
     io.BackendRendererUserData = (void*)bd;
@@ -305,8 +304,16 @@ bool    ImGui_ImplOpenGL3_Init(const char* glsl_version)
     GLint minor = 0;
     glGetIntegerv(GL_MAJOR_VERSION, &major);
     glGetIntegerv(GL_MINOR_VERSION, &minor);
-    if (major == 0 && minor == 0)
+    if (major == 0 && minor == 0 && gl_version_str)
+    {
         sscanf(gl_version_str, "%d.%d", &major, &minor); // Query GL_VERSION in desktop GL 2.x, the string will start with "<major>.<minor>"
+    }
+    if (major == 0 && minor == 0)
+    {
+        // Just cheat
+        major = 3;
+        minor = 2;
+    }
     bd->GlVersion = (GLuint)(major * 100 + minor * 10);
 #if defined(GL_CONTEXT_PROFILE_MASK)
     if (bd->GlVersion >= 320)
@@ -317,7 +324,7 @@ bool    ImGui_ImplOpenGL3_Init(const char* glsl_version)
 #if defined(IMGUI_IMPL_OPENGL_ES3)
     bd->GlProfileIsES3 = true;
 #else
-    if (strncmp(gl_version_str, "OpenGL ES 3", 11) == 0)
+    if ((gl_version_str && (strncmp(gl_version_str, "OpenGL ES 3", 11) == 0)) || (major == 3 && minor == 2))
         bd->GlProfileIsES3 = true;
 #endif

@@ -794,7 +801,7 @@ bool    ImGui_ImplOpenGL3_CreateDeviceObjects()
         "}\n";

     const GLchar* vertex_shader_glsl_300_es =
-        "precision highp float;\n"
+        "precision mediump float;\n"
         "layout (location = 0) in vec2 Position;\n"
         "layout (location = 1) in vec2 UV;\n"
         "layout (location = 2) in vec4 Color;\n"
@@ -878,7 +885,7 @@ bool    ImGui_ImplOpenGL3_CreateDeviceObjects()
         vertex_shader = vertex_shader_glsl_410_core;
         fragment_shader = fragment_shader_glsl_410_core;
     }
-    else if (glsl_version == 300)
+    else if (glsl_version == 300 || glsl_version == 310 || glsl_version == 320)
     {
         vertex_shader = vertex_shader_glsl_300_es;
         fragment_shader = fragment_shader_glsl_300_es;
diff --git a/backends/imgui_impl_opengl3_loader.h b/backends/imgui_impl_opengl3_loader.h
index 3fbc3481..084aafdb 100644
--- a/backends/imgui_impl_opengl3_loader.h
+++ b/backends/imgui_impl_opengl3_loader.h
@@ -773,8 +773,8 @@ static GL3WglProc get_proc(const char* proc)
     // Before EGL version 1.5, eglGetProcAddress doesn't support querying core
     // functions and may return a dummy function if we try, so try to load the
     // function from the GL library directly first.
-    if (libegl)
-        *(void**)(&res) = dlsym(libgl, proc);
+//TODO    if (libegl)
+//TODO        *(void**)(&res) = dlsym(libgl, proc);

     if (!res)
         res = gl_get_proc_address(proc);
@@ -798,7 +798,15 @@ static int parse_version(void)
     {
         // Query GL_VERSION in desktop GL 2.x, the string will start with "<major>.<minor>"
         if (const char* gl_version = (const char*)glGetString(GL_VERSION))
+        {
             sscanf(gl_version, "%d.%d", &version.major, &version.minor);
+        }
+        // We just assume we'll be ok
+        if (version.major == 0 && version.minor == 0)
+        {
+          version.major = 3;
+          version.minor = 2;
+        }
     }
     if (version.major < 2)
         return GL3W_ERROR_OPENGL_VERSION;
